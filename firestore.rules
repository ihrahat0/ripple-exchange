rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    function isAdmin() {
      return request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Helper function to check if user owns the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    match /users/{userId} {
      // Allow admins to read/write all user documents
      allow read, write: if isAuthenticated() && (isOwner(userId) || isAdmin());
      
      // Allow initial creation for new Google users
      allow create: if isAuthenticated() && isOwner(userId);
      
      // Allow access to user's positions subcollection
      match /positions/{positionId} {
        allow read, write: if isAuthenticated() && (isOwner(userId) || isAdmin());
      }
    }

    // Main positions collection rules
    match /positions/{positionId} {
      allow read: if isAuthenticated() && (
        !exists(/databases/$(database)/documents/positions/$(positionId))
        || resource.data.userId == request.auth.uid
        || isAdmin()
      );
      
      allow create: if isAuthenticated() 
        && (request.resource.data.userId == request.auth.uid || isAdmin())
        && request.resource.data.status == 'OPEN'
        && request.resource.data.openTime is timestamp;
      
      allow update: if isAuthenticated() 
        && (resource.data.userId == request.auth.uid || isAdmin())
        && (
          (request.resource.data.status == 'CLOSED' && resource.data.status == 'OPEN')
          || (request.resource.data.status == resource.data.status)
        );
      
      allow delete: if isAuthenticated() 
        && (resource.data.userId == request.auth.uid || isAdmin());
    }

    // Update coins collection rules
    match /coins/{coinId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }

    // Rules for other collections
    match /{collection}/{docId} {
      // Default rule - admins can read/write all other collections
      allow read, write: if isAdmin();
      // Public can read certain collections
      allow read: if collection in ['tokens', 'pairs', 'marketData'] && isAuthenticated();
    }
  }
} 